<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 跟web.xml中配置的那个filter名称一致 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 安全管理器：shiro的核心，外观者模式，facade模式 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 认证不通过的时候，跳转到登陆页面 -->
		<property name="loginUrl" value="/login.html" />
		
		<property name="filters">
			<map>
				<entry key="perms" value-ref="erpFilter"/>
			</map>
		</property>
		
		<!-- 未授权时，跳转的页面 -->
		<property name="unauthorizedUrl" value="/error.html" />
		<!-- 过滤链: 配置需要进入权限验证的页面或资源 -->
		<property name="filterChainDefinitions">
			<value>
				/login_*=anon
				/login.html=anon
				/goodstype.html=perms["商品类型"]
				/goods.html=perms["商品"]
				/dep.html=perms["部门"]
				/emp.html=perms["员工"]
				/supplier.html=perms["供应商","客户"]
				/store.html=perms["仓库"]
				/orders.html=perms["采购订单查询","采购订单申请","采购订单审核","采购订单确认","采购订单入库","销售订单查询","销售订单录入","销售订单出库"]
				/orders_*=perms["采购订单查询","采购订单申请","采购订单审核","采购订单确认","采购订单入库","销售订单查询","销售订单录入","销售订单出库"]
				/*.html=authc
				
			</value>
		</property>
	</bean>

	<!-- 安全管理器：大脑 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="erpRealm"></property>
		<property name="cacheManager" ref="shiroCacheManager"></property>
	</bean>

	<bean id="erpRealm" class="cn.feituo.erp.realm.ErpRealm">
		<property name="empBiz" ref="empBiz"></property>
		<property name="menuBiz" ref="menuBiz"></property>
	</bean>
	
	<bean id="erpFilter" class="cn.feituo.erp.filter.ErpAuthorizationFilter"></bean>
	
	<!-- 认证与授权的缓存 -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>
	
	<!-- 启动shiro注解 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
			depends-on="lifecycleBeanPostProcessor" >
		<!-- 默认使用JDK代理 ，如被代理类没有实现接口，必须使用下列配置开启 cglib代理  -->
		<property name="proxyTargetClass" value="true" />
	</bean>	
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<!-- 对安全管理器 增强代码 ， spring 后处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/> 
</beans>